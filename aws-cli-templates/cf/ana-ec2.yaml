AWSTemplateFormatVersion: '2010-09-09'
Description: EC2

Parameters:
  AMIImageId:
    Type: AWS::EC2::Image::Id
    Default: "ami-038f1ca1bd58a5790"
    Description: AMI-Image-Id
  SSHKeyPairName:
    Type: AWS::EC2::KeyPair::KeyName
    Default: "firstsshkeypair"
    Description: SSH Key pair to connect to EC2
  SecurityGroupId:
    Type: List<AWS::EC2::SecurityGroup::Id>
    Default: "sg-065a0c2f475fd2a72"
    Description: Secuiry Group assigned to EC2
  VPCId:
    Type: AWS::EC2::VPC::Id
    Default: "vpc-90ef5bed"
    Description: Secuiry Group assigned to EC2
  SubnetId:
    Type: AWS::EC2::Subnet::Id
    Default: "subnet-58fa9d79"
    Description: Secuiry Group assigned to EC2
  TagKey:
    Type: String
    Default: "Project"
  TagValue:
    Type: String
    Default: "MyTest"
  DocumentDBPermFile:
    Type: String
    Default: "wget https://s3.amazonaws.com/rds-downloads/rds-combined-ca-bundle.pem"

Resources:
  MongoEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageId: !Ref 'AMIImageId'
      InstanceType: "t2.small"
      KeyName: !Ref 'SSHKeyPairName'
      SecurityGroupIds:
        !Ref 'SecurityGroupId'
      SubnetId: !Ref 'SubnetId'
      Tags:
        - Key: !Ref 'TagKey'
          Value: !Ref 'TagValue'
      UserData:
        Fn::Base64: !Sub |
          #!/bin/bash
          yum update -y
          amazon-linux-extras install docker -y
          service docker start
          usermod -a -G docker ec2-user
          docker info
          ${DocumentDBPermFile}